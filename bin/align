#!/bin/bash
set -e

BS=128
COUNT=`wc -c $1`
BYTES=${COUNT//[^0-9]/}
BLOCKS=$(( BYTES / BS ))
SECTORS=$(( BLOCKS + 1 ))
echo "Code size  = " $BYTES 
echo "Image size = " $SECTORS " * " $BS " = " $(( SECTORS * BS ));

if [ ! -z $2 ]; then
    set -e
    echo "Adjusting BSS End...";
    echo "Reading Map File...";
    cat $2 | while read -r line ; do
        if [[ $line =~ ^BSS[[:space:]]+[A-F0-9]{6}[[:space:]]+[A-F0-9]{2}([A-F0-9]{2})([A-F0-9]{2}) ]]
        then
            echo -n -e "\\x${BASH_REMATCH[1]}" > $1.bss1;
            echo -n -e "\\x${BASH_REMATCH[2]}" > $1.bss2;
            echo "${BASH_REMATCH[1]}" > $1.bsr1;
            echo "${BASH_REMATCH[2]}" > $1.bsr2;
        fi
        if [[ $line =~ ^_nrpck_bss_end[[:space:]]+([A-Z0-9]{6})[[:space:]]+RLA.+ ]] || [[ $line =~ ^.+[[:space:]]+[A-Z0-9]{6}[[:space:]]+RLA.+_nrpck_bss_end[[:space:]]+([A-Z0-9]{6}) ]]
        then
            expr `printf "%d" "0x${BASH_REMATCH[1]}"` > $1.start;
        fi
    done

    START=`cat $1.start`
    START=$(( START - 1279 ))
    echo "Writing `cat $1.bsr1` at 0x`printf %x $START`...";
    #cp $1 $1.img
    #exit 1;
    dd of=$1 if=$1.bss1 bs=1 seek=$START conv=notrunc count=1
    START=$(( START + 2 ))
    echo "Writing `cat $1.bsr2` at 0x`printf %x $START`...";
    dd of=$1 if=$1.bss2 bs=1 seek=$START conv=notrunc count=1

    rm $1.bss1
    rm $1.bss2
    rm $1.bsr1
    rm $1.bsr2
    rm $1.start
fi

echo "Adding Padding...";
dd if=/dev/zero of=$1.pad bs=$BS count=$SECTORS
dd if=$1 of=$1.pad conv=notrunc
rm $1
mv $1.pad $1


echo "Alignment complete!";